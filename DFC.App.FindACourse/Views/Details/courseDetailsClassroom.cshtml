@model DetailsViewModel

<div id="classroom-details-block">
    <h2 class="govuk-heading-m" id="courseDetails">Course details</h2>
    <table class="govuk-table">
        <caption class="govuk-visually-hidden">Table with course details</caption>
        <tbody class="govuk-table__body">
            <partial name="CourseQualificationDetails" />
            <tr class="govuk-table__row">
                <th class="govuk-table__header" scope="row">Learning method</th>
                <td class="govuk-table__cell"><span id="attendance-mode">@Html.Raw(Model.CourseDetails.AttendanceMode)</span></td>
            </tr>
            @if (Model.CourseDetails.CourseType != "All" && !string.IsNullOrWhiteSpace(Model.CourseDetails.CourseType))
            {
                <tr class="govuk-table__row">
                    <th class="govuk-table__header" scope="row">Course type</th>
                    <td class="govuk-table__cell"><span id="course-type">@Html.Raw(Model.CourseDetails.CourseType)</span></td>
                </tr>
            } 
            @if (Model.CourseDetails.Sector != "All" && !string.IsNullOrWhiteSpace(Model.CourseDetails.Sector))
            {
                <tr class="govuk-table__row">
                    <th class="govuk-table__header" scope="row">Sector</th>
                    <td class="govuk-table__cell"><span id="course-type">@Html.Raw(Model.CourseDetails.Sector)</span></td>
                </tr>
            }
            <tr class="govuk-table__row">
                <th class="govuk-table__header" scope="row">Course hours</th>
                <td class="govuk-table__cell">
                    @switch (Model.CourseDetails.StudyMode)
                    {
                        case "FullTime":
                            <span>Full-time</span>
                            break;
                        case "PartTime":
                            <span>Part-time</span>
                            break;
                        case "Flexible":
                            <span>Flexible</span>
                            break;
                        default:
                            break;
                    }
                </td>
            </tr>
            <partial name="_StartDate" model="Model.CourseDetails" />
            <partial name="_CourseDesc" model="Model.CourseDetails" />

            <tr class="govuk-table__row">
                <th class="govuk-table__header" scope="row">Attendance pattern</th>
                <td class="govuk-table__cell"><span id="attendance-pattern">@Html.Raw(Model.CourseDetails.AttendancePattern)</span></td>
            </tr>
        </tbody>
    </table>

    <div class="govuk-accordion" data-module="govuk-accordion" id="accordion-default">
        @*<div class="govuk-accordion__controls"><button type="button" class="govuk-accordion__open-all" aria-expanded="false">Open all<span class="govuk-visually-hidden"> sections</span></button></div>*@
        @(await Html.PartialAsync("AccordionSections/WhoTheCourseIsFor", new AccordionSetUpModel {SectionText = Model.CourseDetails.Description, Position = "1"}))
        @(await Html.PartialAsync("AccordionSections/EntryRequirements", new AccordionSetUpModel {SectionText = Model.CourseDetails.EntryRequirements, Position = "2"}))
        @(await Html.PartialAsync("AccordionSections/WhatYouWillLearn", new AccordionSetUpModel {SectionText = Model.CourseDetails.WhatYoullLearn, Position = "3"}))
        @(await Html.PartialAsync("AccordionSections/HowYouWillLearn", new AccordionSetUpModel {SectionText = Model.CourseDetails.HowYoullLearn, Position = "4"}))
        @(await Html.PartialAsync("AccordionSections/WhatYouWillNeedToBring", new AccordionSetUpModel {SectionText = Model.CourseDetails.EquipmentRequired, Position = "5"}))
        @(await Html.PartialAsync("AccordionSections/HowYouWillBeAssessed", new AccordionSetUpModel {SectionText = Model.CourseDetails.AssessmentMethod, Position = "6"}))

        @if (!string.IsNullOrWhiteSpace(Model.CourseDetails.NextSteps))
        {
            <div class="govuk-accordion__section">
                <div class="govuk-accordion__section-header">
                    <h2 class="govuk-accordion__section-heading">  <button type="button" id="accordion-default-heading-7" aria-controls="accordion-default-content-7" class="govuk-accordion__section-button" aria-describedby="accordion-default-content-7" aria-expanded="false"> What you can do next <span class="govuk-accordion__icon" aria-hidden="true"></span></button></h2>
                </div>
                <div id="accordion-default-content-7" class="govuk-accordion__section-content" aria-labelledby="accordion-default-heading-7">
                    <p id="next-steps">@Html.Raw(Html.HtmlFormat(Model.CourseDetails.NextSteps))</p>
                </div>
            </div>

        }
        <div class="govuk-accordion__section">
            <div class="govuk-accordion__section-header">
                <h2 class="govuk-accordion__section-heading">  <button type="button" id="accordion-default-heading-8" aria-controls="accordion-default-content-8" class="govuk-accordion__section-button" aria-expanded="false">Venue for this course<span class="govuk-accordion__icon" aria-hidden="true"></span></button></h2>
            </div>
            <div id="accordion-default-content-8" class="govuk-accordion__section-content" aria-labelledby="accordion-default-heading-8">

                <partial name="courseDetailsVenueDetails" model="Model.CourseDetails.VenueDetails" />

                @if (Model.CourseDetails.AlternativeCourseRuns.Any())
                {
                    <h2 class="govuk-heading-m" id="othervenuesdates">Other venues and dates</h2>
                    <table class="govuk-table">
                        <tbody class="govuk-table__body">
                            <tr class="govuk-table__row">
                                <th class="govuk-table__header" scope="col">Venue</th>
                                <th class="govuk-table__header" scope="col">Start date</th>
                                <th class="govuk-table__header" scope="col">Options</th>
                            </tr>
                            @{ int counter = 1; }
                            @foreach (AlternativeCourseRun courseRun in Model.CourseDetails.AlternativeCourseRuns)
                            {
                                <tr class="govuk-table__row">
                                    <td class="govuk-table__cell"><span id="other-venue-name-@counter">@Html.Raw(courseRun.VenueName)</span></td>
                                    <td class="govuk-table__cell">
                                        @if (courseRun.StartDate != null)
                                        {
                                            <span id="other-startdate-@counter">@courseRun.StartDate.Value.ToFormattedString()</span>
                                        }
                                    </td>
                                    <td class="govuk-table__cell">
                                        <a class="govuk-link" id="other-website-@(counter++)" href="/find-a-course/details?courseId=@Model.CourseDetails.CourseId&runId=@courseRun.RunId&@Model.SearchTerm">View course</a>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                }
            </div>
        </div>
    </div>
    @if (Model.CourseDetails.CourseWebpageLink != null)
    {
        <a href="@Model.CourseDetails.CourseWebpageLink" role="button" draggable="false" class="govuk-button ncs-button__secondary govuk-button--start" data-module="govuk-button">
            Go to course
            <svg class="govuk-button__start-icon" xmlns="http://www.w3.org/2000/svg" width="17.5" height="19" viewBox="0 0 33 40" aria-hidden="true" focusable="false">
                <path fill="currentColor" d="M0 0h13l20 20-20 20H0l20-20z" />
            </svg>
        </a>
    }
    @if (string.IsNullOrEmpty(Model.BackLinkUrl))
    {
        <p><a href="/find-a-course/page?@Model.SearchTerm" class="govuk-back-link" id="back-to-results">Back to results</a></p>
    }
    else
    {
        <p><a href="@Model.BackLinkUrl" class="govuk-back-link" id="back-to-results">Back</a></p>
    }
</div>
