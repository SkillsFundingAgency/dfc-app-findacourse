@model DFC.App.FindACourse.ViewModels.BodyViewModel

@{
    var previousPage = Model.RequestPage - 1;
    var nextPage = Model.RequestPage + 1;

    var town = Model.SideBar.TownOrPostcode;
    var distance = Model.SideBar.DistanceValue;
    var courseType = Html.Raw(Json.Serialize(Model.SideBar.CourseType.SelectedIds));
    var courseHours = Html.Raw(Json.Serialize(Model.SideBar.CourseHours.SelectedIds));
    var courseStudyTime = Html.Raw(Json.Serialize(Model.SideBar.CourseStudyTime.SelectedIds));
    var startDate = Model.SideBar.StartDateValue;
    var searchTerm = Model.SideBar.CurrentSearchTerm;
    var filterA = Model.SideBar.FiltersApplied;
    var orderByValue = Model.SideBar.SelectedOrderByValue;
    var coordinates = Model.SideBar.Coordinates;
    var campaignCode = Model.CourseSearchFilters.CampaignCode;
    var qualificationLevels = Html.Raw(Json.Serialize(Model.SideBar.QualificationLevels.SelectedIds));


    var parameters = $"{nameof(searchTerm)}={searchTerm}&" +
                     $"{nameof(town)}={town}&" +
                     $"{nameof(courseType)}={courseType}&" +
                     $"{nameof(courseHours)}={courseHours}&" +
                     $"{nameof(courseStudyTime)}={courseStudyTime}&" +
                     $"{nameof(startDate)}={startDate}&" +
                     $"{nameof(distance)}={distance}&" +
                     $"{nameof(filterA)}={filterA}&" +
                     $"{nameof(orderByValue)}={orderByValue}&" +
                     $"{nameof(coordinates)}={coordinates}&" +
                     $"{nameof(campaignCode)}={campaignCode}&" +
                     $"{nameof(qualificationLevels)}={qualificationLevels}";
    var nextLinkParams = $"{parameters}&page={nextPage}";
    var previousLinkParams = $"{parameters}&page={previousPage}";
    var id = Model.IsResultBody ? "fac-result-list-Result" : "fac-result-list";
}

<div id="@id">
    @if (Model.Results != null)
    {
        if (Model.Results.Courses.Count() > 0)
        {
            int showRecordsFrom;
            int showRecordsTo;
            int showMaxPages = 10;
            int startPage;
            int endPage;
            int currentPage;
            if (Model.RequestPage == 1)
            {
                showRecordsFrom = 1;
                showRecordsTo = Model.PageSize > @Model.Results.ResultProperties.TotalResultCount ? @Model.Results.ResultProperties.TotalResultCount : Model.PageSize;
                currentPage = 1;
            }
            else
            {
                showRecordsFrom = ((Model.Results.ResultProperties.Page - 1) * Model.PageSize) + 1;
                showRecordsTo = Model.Results.ResultProperties.TotalPages == Model.RequestPage ? Model.Results.ResultProperties.TotalResultCount : Model.PageSize * (Model.RequestPage);
                currentPage = Model.RequestPage;
            }

            <div class="govuk-heading-s fac-show-courses-count">Showing @showRecordsFrom to @showRecordsTo of  @Model.Results.ResultProperties.TotalResultCount courses</div>

            <div class="fac-search-results-list govuk-list">
                <hr class="govuk-section-break govuk-section-break--visible">

                @foreach (var result in Model.Results.Courses)
                {
                    result.HasCampaignCode = Model.FreeCourseSearch;
                    switch (result.AttendanceMode)
                    {
                        case "Classroom based":
                            <partial name="_results_classroom" model="result" />
                            <hr class="govuk-section-break govuk-section-break--visible">
                            break;
                        case "Work based":
                            <partial name="_results_workbased" model="result" />
                            <hr class="govuk-section-break govuk-section-break--visible">
                            break;
                        case "Online":
                            <partial name="_results_online" model="result" />
                            <hr class="govuk-section-break govuk-section-break--visible">
                            break;
                        default:
                            break;
                    }
                }

                @if (Model.Results.ResultProperties.TotalPages > 1)
                {
                    if (Model.Results.ResultProperties.TotalPages <= showMaxPages)
                    {
                        startPage = 1;
                        endPage = Model.Results.ResultProperties.TotalPages;
                    }
                    else
                    {
                        var maxPagesBeforeCurrentPage = (int)Math.Floor((decimal)showMaxPages / (decimal)2);
                        var maxPagesAfterCurrentPage = (int)Math.Ceiling((decimal)showMaxPages / (decimal)2) - 1;
                        if (currentPage <= maxPagesBeforeCurrentPage)
                        {
                            startPage = 1;
                            endPage = showMaxPages;
                        }
                        else if (currentPage + maxPagesAfterCurrentPage >= Model.Results.ResultProperties.TotalPages)
                        {
                            startPage = Model.Results.ResultProperties.TotalPages - showMaxPages + 1;
                            endPage = Model.Results.ResultProperties.TotalPages;
                        }
                        else
                        {
                            startPage = currentPage - maxPagesBeforeCurrentPage;
                            endPage = currentPage + maxPagesAfterCurrentPage;
                        }
                    }
                    <nav class="govuk-pagination" role="navigation" aria-label="results">

                        @if (Model.Results.ResultProperties.Page > 1)
                        {
                            <div class="govuk-pagination__prev">
                                <a class="govuk-link govuk-pagination__link" href="/find-a-course/page?@previousLinkParams" rel="prev">
                                    <svg class="govuk-pagination__icon govuk-pagination__icon--prev" xmlns="http://www.w3.org/2000/svg" height="13" width="15" aria-hidden="true" focusable="false" viewBox="0 0 15 13">
                                        <path d="m6.5938-0.0078125-6.7266 6.7266 6.7441 6.4062 1.377-1.449-4.1856-3.9768h12.896v-2h-12.984l4.2931-4.293-1.414-1.414z"></path>
                                    </svg>
                                    <span class="govuk-pagination__link-title">Previous</span>
                                </a>
                            </div>
                        }

                        <ul class="govuk-pagination__list">
                            @for (int i = startPage; i <= endPage; i++)
                            {
                                @if (i == Model.RequestPage)
                                {
                                    <li class="govuk-pagination__item govuk-pagination__item--current">
                                        <a class="govuk-link govuk-pagination__link" href="/find-a-course/page?@parameters&page=@i" aria-label="Page @i">
                                            @i
                                        </a>
                                    </li>
                                }
                                else
                                {
                                    <li class="govuk-pagination__item">
                                        <a class="govuk-link govuk-pagination__link" aria-label="Page @(i == endPage ? endPage : i)" href="/find-a-course/page?@parameters&page=@i" aria-current="page">
                                            @i
                                        </a>
                                    </li>
                                }
                            }
                        </ul>

                        @if (Model.Results.ResultProperties.Page < Model.Results.ResultProperties.TotalPages)
                        {
                            <div class="govuk-pagination__next">
                                <a class="govuk-link govuk-pagination__link" href="/find-a-course/page?@nextLinkParams" rel="next">
                                    <span class="govuk-pagination__link-title">Next</span>
                                    <svg class="govuk-pagination__icon govuk-pagination__icon--next" xmlns="http://www.w3.org/2000/svg" height="13" width="15" aria-hidden="true" focusable="false" viewBox="0 0 15 13">
                                        <path d="m8.107-0.0078125-1.4136 1.414 4.2926 4.293h-12.986v2h12.896l-4.1855 3.9766 1.377 1.4492 6.7441-6.4062-6.7246-6.7266z"></path>
                                    </svg>
                                </a>
                            </div>
                        }
                    </nav>
                    <div class="hods-pagination__navigation__summary">
                        Showing @showRecordsFrom - @showRecordsTo of @Model.Results.ResultProperties.TotalResultCount results
                    </div>
                }
            </div>
        }
        else
        {
            <div id="no-results-block">
                <h3 class="govuk-body-s govuk-!-margin-bottom-1">
                    <p class="govuk-body">We didn't find any results for <span id="search-term-no-results">'@Html.Raw(Model.CurrentSearchTerm)'</span> with the active filters you've applied. Try searching again.</p>
                    <p class="govuk-body">You could:</p>
                    <ul class="list list-bullet govuk-body">
                        <li>check your spelling</li>
                        <li>change the start date</li>
                        <li>check your town or postcode</li>
                        <li>change your filters</li>
                        <li>try different search terms</li>
                    </ul>
                </h3>
            </div>
        }
    }
</div>